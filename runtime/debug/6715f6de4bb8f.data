a:14:{s:6:"config";s:2567:"a:5:{s:10:"phpVersion";s:5:"8.2.4";s:10:"yiiVersion";s:6:"2.0.51";s:11:"application";a:8:{s:3:"yii";s:6:"2.0.51";s:4:"name";s:14:"My Application";s:7:"version";s:3:"1.0";s:8:"language";s:5:"en-US";s:14:"sourceLanguage";s:5:"en-US";s:7:"charset";s:5:"UTF-8";s:3:"env";s:3:"dev";s:5:"debug";b:1;}s:3:"php";a:5:{s:7:"version";s:5:"8.2.4";s:6:"xdebug";b:0;s:3:"apc";b:0;s:8:"memcache";b:0;s:9:"memcached";b:0;}s:10:"extensions";a:10:{s:22:"yiisoft/yii2-bootstrap";a:3:{s:4:"name";s:22:"yiisoft/yii2-bootstrap";s:7:"version";s:8:"2.0.11.0";s:5:"alias";a:1:{s:14:"@yii/bootstrap";s:62:"C:\xampp\htdocs\clima-commit\vendor/yiisoft/yii2-bootstrap/src";}}s:18:"yiisoft/yii2-faker";a:3:{s:4:"name";s:18:"yiisoft/yii2-faker";s:7:"version";s:7:"2.0.5.0";s:5:"alias";a:1:{s:10:"@yii/faker";s:58:"C:\xampp\htdocs\clima-commit\vendor/yiisoft/yii2-faker/src";}}s:26:"yiisoft/yii2-symfonymailer";a:3:{s:4:"name";s:26:"yiisoft/yii2-symfonymailer";s:7:"version";s:7:"2.0.4.0";s:5:"alias";a:1:{s:18:"@yii/symfonymailer";s:66:"C:\xampp\htdocs\clima-commit\vendor/yiisoft/yii2-symfonymailer/src";}}s:18:"yiisoft/yii2-debug";a:3:{s:4:"name";s:18:"yiisoft/yii2-debug";s:7:"version";s:8:"2.1.25.0";s:5:"alias";a:1:{s:10:"@yii/debug";s:58:"C:\xampp\htdocs\clima-commit\vendor/yiisoft/yii2-debug/src";}}s:16:"yiisoft/yii2-gii";a:3:{s:4:"name";s:16:"yiisoft/yii2-gii";s:7:"version";s:7:"2.2.6.0";s:5:"alias";a:1:{s:8:"@yii/gii";s:56:"C:\xampp\htdocs\clima-commit\vendor/yiisoft/yii2-gii/src";}}s:23:"yiisoft/yii2-httpclient";a:3:{s:4:"name";s:23:"yiisoft/yii2-httpclient";s:7:"version";s:8:"2.0.15.0";s:5:"alias";a:1:{s:15:"@yii/httpclient";s:63:"C:\xampp\htdocs\clima-commit\vendor/yiisoft/yii2-httpclient/src";}}s:24:"rmrevin/yii2-fontawesome";a:3:{s:4:"name";s:24:"rmrevin/yii2-fontawesome";s:7:"version";s:7:"3.7.0.0";s:5:"alias";a:1:{s:24:"@rmrevin/yii/fontawesome";s:60:"C:\xampp\htdocs\clima-commit\vendor/rmrevin/yii2-fontawesome";}}s:25:"kartik-v/yii2-krajee-base";a:3:{s:4:"name";s:25:"kartik-v/yii2-krajee-base";s:7:"version";s:7:"3.0.5.0";s:5:"alias";a:1:{s:12:"@kartik/base";s:65:"C:\xampp\htdocs\clima-commit\vendor/kartik-v/yii2-krajee-base/src";}}s:31:"kartik-v/yii2-widget-datepicker";a:3:{s:4:"name";s:31:"kartik-v/yii2-widget-datepicker";s:7:"version";s:10:"dev-master";s:5:"alias";a:1:{s:12:"@kartik/date";s:71:"C:\xampp\htdocs\clima-commit\vendor/kartik-v/yii2-widget-datepicker/src";}}s:16:"yiisoft/yii2-jui";a:3:{s:4:"name";s:16:"yiisoft/yii2-jui";s:7:"version";s:7:"2.0.7.0";s:5:"alias";a:1:{s:8:"@yii/jui";s:52:"C:\xampp\htdocs\clima-commit\vendor/yiisoft/yii2-jui";}}}}";s:3:"log";s:49199:"a:1:{s:8:"messages";a:50:{i:0;a:6:{i:0;s:19:"Loading module: gii";i:1;i:8;i:2;s:26:"yii\base\Module::getModule";i:3;d:1729492702.310481;i:4;a:0:{}i:5;i:6384648;}i:1;a:6:{i:0;s:42:"Bootstrap with yii\gii\Module::bootstrap()";i:1;i:8;i:2;s:31:"yii\base\Application::bootstrap";i:3;d:1729492702.310655;i:4;a:0:{}i:5;i:6409248;}i:3;a:6:{i:0;s:50:"Route requested: 'project/new-jupyter-request-new'";i:1;i:8;i:2;s:34:"yii\web\Application::handleRequest";i:3;d:1729492702.311201;i:4;a:0:{}i:5;i:6535576;}i:4;a:6:{i:0;s:45:"Route to run: project/new-jupyter-request-new";i:1;i:8;i:2;s:30:"yii\base\Controller::runAction";i:3;d:1729492702.314362;i:4;a:0:{}i:5;i:7165376;}i:5;a:6:{i:0;s:35:"SELECT * FROM "user" WHERE "id"=217";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.316451;i:4;a:3:{i:0;a:5:{s:4:"file";s:84:"C:\xampp\htdocs\clima-commit\vendor\webvimark\module-user-management\models\User.php";s:4:"line";i:71;s:8:"function";s:7:"findOne";s:5:"class";s:23:"yii\db\BaseActiveRecord";s:4:"type";s:2:"::";}i:1;a:5:{s:4:"file";s:63:"C:\xampp\htdocs\clima-commit\components\EmailVerifiedFilter.php";s:4:"line";i:14;s:8:"function";s:14:"getCurrentUser";s:5:"class";s:44:"webvimark\modules\UserManagement\models\User";s:4:"type";s:2:"::";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:83;s:8:"function";s:12:"beforeAction";s:5:"class";s:18:"yii\web\Controller";s:4:"type";s:2:"->";}}i:5;i:7517448;}i:8;a:6:{i:0;s:147:"SELECT * FROM "email_verification" WHERE (("user_id"=217) AND ("status"=0)) AND ("expiry" > '2024-10-21T08:38:22+02:00') ORDER BY "created_at" DESC";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.317568;i:4;a:2:{i:0;a:5:{s:4:"file";s:63:"C:\xampp\htdocs\clima-commit\components\EmailVerifiedFilter.php";s:4:"line";i:19;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:83;s:8:"function";s:12:"beforeAction";s:5:"class";s:18:"yii\web\Controller";s:4:"type";s:2:"->";}}i:5;i:7588728;}i:11;a:6:{i:0;s:79:"Running action: app\controllers\ProjectController::actionNewJupyterRequestNew()";i:1;i:8;i:2;s:36:"yii\base\InlineAction::runWithParams";i:3;d:1729492702.318242;i:4;a:0:{}i:5;i:7609104;}i:12;a:6:{i:0;s:30:"SELECT * FROM "jupyter_images"";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.318394;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:791;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7631728;}i:15;a:6:{i:0;s:2820:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'jupyter_images'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.319083;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:791;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7648216;}i:18;a:6:{i:0;s:882:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='jupyter_images'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.321365;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:791;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7654424;}i:21;a:6:{i:0;s:57:"SELECT * FROM "jupyter_limits" WHERE "user_type"='bronze'";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.323513;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:805;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7829928;}i:24;a:6:{i:0;s:2820:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'jupyter_limits'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.323981;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:805;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7839120;}i:27;a:6:{i:0;s:882:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='jupyter_limits'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.326076;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:805;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7846792;}i:30;a:6:{i:0;s:148:"SELECT COUNT(*) FROM "project_request" WHERE (("status" IN (1, 2)) AND ("project_type"=4) AND ("submitted_by"=217)) AND ("end_date" >= '2024-10-21')";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.328656;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:808;s:8:"function";s:5:"count";s:5:"class";s:12:"yii\db\Query";s:4:"type";s:2:"->";}}i:5;i:8095448;}i:33;a:6:{i:0;s:57:"SELECT * FROM "jupyter_limits" WHERE "user_type"='bronze'";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.330313;i:4;a:2:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:57;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:816;s:8:"function";s:11:"__construct";s:5:"class";s:19:"yii\base\BaseObject";s:4:"type";s:2:"->";}}i:5;i:8159808;}i:36;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.330909;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:822;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8185896;}i:39;a:6:{i:0;s:2824:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'jupyter_autoaccept'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.331304;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:822;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8195008;}i:42;a:6:{i:0;s:886:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='jupyter_autoaccept'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.333393;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:822;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8201768;}i:45;a:6:{i:0;s:140:"SELECT COUNT(*) FROM "project_request" WHERE (("status"=2) AND ("project_type"=4) AND ("submitted_by"=217)) AND ("end_date" >= '2024-10-21')";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.334803;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:825;s:8:"function";s:5:"count";s:5:"class";s:12:"yii\db\Query";s:4:"type";s:2:"->";}}i:5;i:8205264;}i:48;a:6:{i:0;s:57:"SELECT * FROM "jupyter_limits" WHERE "user_type"='bronze'";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.335093;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:832;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8206216;}i:51;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.335337;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:834;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8210800;}i:54;a:6:{i:0;s:87:"Rendering view file: C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";i:1;i:8;i:2;s:25:"yii\base\View::renderFile";i:3;d:1729492702.336647;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:8707008;}i:55;a:6:{i:0;s:78:"Rendering view file: C:\xampp\htdocs\clima-commit\components\views\headers.php";i:1;i:8;i:2;s:25:"yii\base\View::renderFile";i:3;d:1729492702.340755;i:4;a:3:{i:0;a:5:{s:4:"file";s:51:"C:\xampp\htdocs\clima-commit\components\Headers.php";s:4:"line";i:48;s:8:"function";s:6:"render";s:5:"class";s:15:"yii\base\Widget";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:62;s:8:"function";s:6:"widget";s:5:"class";s:15:"yii\base\Widget";s:4:"type";s:2:"::";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:9220864;}i:56;a:6:{i:0;s:2821:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'project_request'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.343379;i:4;a:2:{i:0;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:80;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:9624536;}i:59;a:6:{i:0;s:883:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='project_request'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.34625;i:4;a:2:{i:0;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:80;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:9639360;}i:62;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.352883;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:5:"label";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10400776;}i:65;a:6:{i:0;s:2823:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'jupyter_request_n'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.353544;i:4;a:2:{i:0;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10416256;}i:68;a:6:{i:0;s:885:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='jupyter_request_n'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.356026;i:4;a:2:{i:0;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10426792;}i:71;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.357465;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10432496;}i:74;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.357747;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10439440;}i:77;a:6:{i:0;s:85:"Rendering view file: C:\xampp\htdocs\clima-commit\components\views\magicsearchbox.php";i:1;i:8;i:2;s:25:"yii\base\View::renderFile";i:3;d:1729492702.35824;i:4;a:3:{i:0;a:5:{s:4:"file";s:58:"C:\xampp\htdocs\clima-commit\components\MagicSearchBox.php";s:4:"line";i:79;s:8:"function";s:6:"render";s:5:"class";s:15:"yii\base\Widget";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:100;s:8:"function";s:6:"widget";s:5:"class";s:15:"yii\base\Widget";s:4:"type";s:2:"::";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10462704;}i:78;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.359156;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:120;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10501512;}i:81;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.359441;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:120;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10508784;}i:84;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.359697;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:120;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10515408;}i:87;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.360241;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:121;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10520728;}i:90;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.360594;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:121;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10528600;}i:93;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.360898;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:121;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10535256;}i:96;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.361188;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:135;s:8:"function";s:5:"label";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10537856;}i:99;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.361482;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:135;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10546192;}i:102;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.361729;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:135;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10552472;}i:105;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.361971;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:135;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10559008;}i:108;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.362244;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:136;s:8:"function";s:5:"label";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10562600;}i:111;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.362521;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:136;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10570936;}i:114;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.362765;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:136;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10577376;}i:117;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.363003;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:136;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10589480;}i:120;a:6:{i:0;s:72:"Rendering view file: C:\xampp\htdocs\clima-commit\views\layouts\main.php";i:1;i:8;i:2;s:25:"yii\base\View::renderFile";i:3;d:1729492702.363486;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10543552;}i:121;a:6:{i:0;s:25:"SELECT * FROM "analytics"";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.364022;i:4;a:2:{i:0;a:5:{s:4:"file";s:51:"C:\xampp\htdocs\clima-commit\views\layouts\main.php";s:4:"line";i:28;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10627656;}i:124;a:6:{i:0;s:2815:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'analytics'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.364425;i:4;a:2:{i:0;a:5:{s:4:"file";s:51:"C:\xampp\htdocs\clima-commit\views\layouts\main.php";s:4:"line";i:28;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10639944;}i:127;a:6:{i:0;s:877:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='analytics'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.366541;i:4;a:2:{i:0;a:5:{s:4:"file";s:51:"C:\xampp\htdocs\clima-commit\views\layouts\main.php";s:4:"line";i:28;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10646960;}i:130;a:6:{i:0;s:74:"SELECT * FROM "notification" WHERE ("seen"=FALSE) AND ("recipient_id"=217)";i:1;i:4;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.369966;i:4;a:3:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\components\NotificationWidget.php";s:4:"line";i:52;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:51:"C:\xampp\htdocs\clima-commit\views\layouts\main.php";s:4:"line";i:158;s:8:"function";s:14:"createMenuItem";s:5:"class";s:33:"app\components\NotificationWidget";s:4:"type";s:2:"::";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10833800;}}}";s:9:"profiling";s:92178:"a:3:{s:6:"memory";i:11073712;s:4:"time";d:0.10544300079345703;s:8:"messages";a:82:{i:6;a:6:{i:0;s:35:"SELECT * FROM "user" WHERE "id"=217";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.316465;i:4;a:3:{i:0;a:5:{s:4:"file";s:84:"C:\xampp\htdocs\clima-commit\vendor\webvimark\module-user-management\models\User.php";s:4:"line";i:71;s:8:"function";s:7:"findOne";s:5:"class";s:23:"yii\db\BaseActiveRecord";s:4:"type";s:2:"::";}i:1;a:5:{s:4:"file";s:63:"C:\xampp\htdocs\clima-commit\components\EmailVerifiedFilter.php";s:4:"line";i:14;s:8:"function";s:14:"getCurrentUser";s:5:"class";s:44:"webvimark\modules\UserManagement\models\User";s:4:"type";s:2:"::";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:83;s:8:"function";s:12:"beforeAction";s:5:"class";s:18:"yii\web\Controller";s:4:"type";s:2:"->";}}i:5;i:7520408;}i:7;a:6:{i:0;s:35:"SELECT * FROM "user" WHERE "id"=217";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.316744;i:4;a:3:{i:0;a:5:{s:4:"file";s:84:"C:\xampp\htdocs\clima-commit\vendor\webvimark\module-user-management\models\User.php";s:4:"line";i:71;s:8:"function";s:7:"findOne";s:5:"class";s:23:"yii\db\BaseActiveRecord";s:4:"type";s:2:"::";}i:1;a:5:{s:4:"file";s:63:"C:\xampp\htdocs\clima-commit\components\EmailVerifiedFilter.php";s:4:"line";i:14;s:8:"function";s:14:"getCurrentUser";s:5:"class";s:44:"webvimark\modules\UserManagement\models\User";s:4:"type";s:2:"::";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:83;s:8:"function";s:12:"beforeAction";s:5:"class";s:18:"yii\web\Controller";s:4:"type";s:2:"->";}}i:5;i:7524000;}i:9;a:6:{i:0;s:147:"SELECT * FROM "email_verification" WHERE (("user_id"=217) AND ("status"=0)) AND ("expiry" > '2024-10-21T08:38:22+02:00') ORDER BY "created_at" DESC";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.317584;i:4;a:2:{i:0;a:5:{s:4:"file";s:63:"C:\xampp\htdocs\clima-commit\components\EmailVerifiedFilter.php";s:4:"line";i:19;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:83;s:8:"function";s:12:"beforeAction";s:5:"class";s:18:"yii\web\Controller";s:4:"type";s:2:"->";}}i:5;i:7591488;}i:10;a:6:{i:0;s:147:"SELECT * FROM "email_verification" WHERE (("user_id"=217) AND ("status"=0)) AND ("expiry" > '2024-10-21T08:38:22+02:00') ORDER BY "created_at" DESC";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.317995;i:4;a:2:{i:0;a:5:{s:4:"file";s:63:"C:\xampp\htdocs\clima-commit\components\EmailVerifiedFilter.php";s:4:"line";i:19;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:83;s:8:"function";s:12:"beforeAction";s:5:"class";s:18:"yii\web\Controller";s:4:"type";s:2:"->";}}i:5;i:7593296;}i:13;a:6:{i:0;s:30:"SELECT * FROM "jupyter_images"";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.318404;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:791;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7632896;}i:14;a:6:{i:0;s:30:"SELECT * FROM "jupyter_images"";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.318884;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:791;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7640600;}i:16;a:6:{i:0;s:2820:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'jupyter_images'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.319112;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:791;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7649384;}i:17;a:6:{i:0;s:2820:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'jupyter_images'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.321216;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:791;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7658256;}i:19;a:6:{i:0;s:882:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='jupyter_images'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.321382;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:791;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7655592;}i:20;a:6:{i:0;s:882:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='jupyter_images'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.322655;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:791;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7656832;}i:22;a:6:{i:0;s:57:"SELECT * FROM "jupyter_limits" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.323525;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:805;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7832152;}i:23;a:6:{i:0;s:57:"SELECT * FROM "jupyter_limits" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.323899;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:805;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7833968;}i:25;a:6:{i:0;s:2820:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'jupyter_limits'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.323995;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:805;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7840288;}i:26;a:6:{i:0;s:2820:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'jupyter_limits'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.325956;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:805;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7854848;}i:28;a:6:{i:0;s:882:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='jupyter_limits'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.326091;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:805;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7847960;}i:29;a:6:{i:0;s:882:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='jupyter_limits'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.32734;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:805;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7849200;}i:31;a:6:{i:0;s:148:"SELECT COUNT(*) FROM "project_request" WHERE (("status" IN (1, 2)) AND ("project_type"=4) AND ("submitted_by"=217)) AND ("end_date" >= '2024-10-21')";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.32867;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:808;s:8:"function";s:5:"count";s:5:"class";s:12:"yii\db\Query";s:4:"type";s:2:"->";}}i:5;i:8097624;}i:32;a:6:{i:0;s:148:"SELECT COUNT(*) FROM "project_request" WHERE (("status" IN (1, 2)) AND ("project_type"=4) AND ("submitted_by"=217)) AND ("end_date" >= '2024-10-21')";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.329374;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:808;s:8:"function";s:5:"count";s:5:"class";s:12:"yii\db\Query";s:4:"type";s:2:"->";}}i:5;i:8098728;}i:34;a:6:{i:0;s:57:"SELECT * FROM "jupyter_limits" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.33033;i:4;a:2:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:57;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:816;s:8:"function";s:11:"__construct";s:5:"class";s:19:"yii\base\BaseObject";s:4:"type";s:2:"->";}}i:5;i:8162408;}i:35;a:6:{i:0;s:57:"SELECT * FROM "jupyter_limits" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.330506;i:4;a:2:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:57;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:816;s:8:"function";s:11:"__construct";s:5:"class";s:19:"yii\base\BaseObject";s:4:"type";s:2:"->";}}i:5;i:8164600;}i:37;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.330928;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:822;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8188136;}i:38;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.331225;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:822;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8189832;}i:40;a:6:{i:0;s:2824:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'jupyter_autoaccept'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.331319;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:822;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8196176;}i:41;a:6:{i:0;s:2824:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'jupyter_autoaccept'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.333251;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:822;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8207744;}i:43;a:6:{i:0;s:886:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='jupyter_autoaccept'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.333409;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:822;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8202936;}i:44;a:6:{i:0;s:886:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='jupyter_autoaccept'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.334676;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:822;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8204176;}i:46;a:6:{i:0;s:140:"SELECT COUNT(*) FROM "project_request" WHERE (("status"=2) AND ("project_type"=4) AND ("submitted_by"=217)) AND ("end_date" >= '2024-10-21')";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.334815;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:825;s:8:"function";s:5:"count";s:5:"class";s:12:"yii\db\Query";s:4:"type";s:2:"->";}}i:5;i:8207480;}i:47;a:6:{i:0;s:140:"SELECT COUNT(*) FROM "project_request" WHERE (("status"=2) AND ("project_type"=4) AND ("submitted_by"=217)) AND ("end_date" >= '2024-10-21')";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.335011;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:825;s:8:"function";s:5:"count";s:5:"class";s:12:"yii\db\Query";s:4:"type";s:2:"->";}}i:5;i:8208544;}i:49;a:6:{i:0;s:57:"SELECT * FROM "jupyter_limits" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.335102;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:832;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8208440;}i:50;a:6:{i:0;s:57:"SELECT * FROM "jupyter_limits" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.335246;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:832;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8210256;}i:52;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.335346;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:834;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8213040;}i:53;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.335478;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:834;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8214736;}i:57;a:6:{i:0;s:2821:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'project_request'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.343403;i:4;a:2:{i:0;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:80;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:9626080;}i:58;a:6:{i:0;s:2821:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'project_request'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.346006;i:4;a:2:{i:0;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:80;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:9658400;}i:60;a:6:{i:0;s:883:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='project_request'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.346279;i:4;a:2:{i:0;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:80;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:9640904;}i:61;a:6:{i:0;s:883:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='project_request'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.347572;i:4;a:2:{i:0;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:80;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:9642520;}i:63;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.352898;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:5:"label";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10403768;}i:64;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.353164;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:5:"label";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10406216;}i:66;a:6:{i:0;s:2823:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'jupyter_request_n'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.35358;i:4;a:2:{i:0;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10417800;}i:67;a:6:{i:0;s:2823:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'jupyter_request_n'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.355878;i:4;a:2:{i:0;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10437584;}i:69;a:6:{i:0;s:885:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='jupyter_request_n'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.356043;i:4;a:2:{i:0;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10428336;}i:70;a:6:{i:0;s:885:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='jupyter_request_n'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.357308;i:4;a:2:{i:0;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10429952;}i:72;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.357478;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10435488;}i:73;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.357626;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10437936;}i:75;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.357759;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10442432;}i:76;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.357894;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10444880;}i:79;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.35917;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:120;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10504504;}i:80;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.359312;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:120;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10506952;}i:82;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.359458;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:120;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10511776;}i:83;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.359595;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:120;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10514224;}i:85;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.359709;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:120;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10518400;}i:86;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.359869;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:120;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10520848;}i:88;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.360262;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:121;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10523720;}i:89;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.360442;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:121;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10526168;}i:91;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.360608;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:121;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10531592;}i:92;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.360775;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:121;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10534040;}i:94;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.360909;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:121;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10538248;}i:95;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.361046;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:121;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10540696;}i:97;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.361202;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:135;s:8:"function";s:5:"label";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10540848;}i:98;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.361334;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:135;s:8:"function";s:5:"label";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10543296;}i:100;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.361493;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:135;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10549184;}i:101;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.361626;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:135;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10551632;}i:103;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.361739;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:135;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10555464;}i:104;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.361866;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:135;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10557912;}i:106;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.361981;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:135;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10562000;}i:107;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.362111;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:135;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10564448;}i:109;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.362254;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:136;s:8:"function";s:5:"label";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10565592;}i:110;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.362384;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:136;s:8:"function";s:5:"label";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10568040;}i:112;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.362532;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:136;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10573928;}i:113;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.362661;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:136;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10576376;}i:115;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.362775;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:136;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10580368;}i:116;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.362903;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:136;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10582816;}i:118;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.363013;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:136;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10592472;}i:119;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.363141;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:136;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10594920;}i:122;a:6:{i:0;s:25:"SELECT * FROM "analytics"";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.364034;i:4;a:2:{i:0;a:5:{s:4:"file";s:51:"C:\xampp\htdocs\clima-commit\views\layouts\main.php";s:4:"line";i:28;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10629200;}i:123;a:6:{i:0;s:25:"SELECT * FROM "analytics"";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.364346;i:4;a:2:{i:0;a:5:{s:4:"file";s:51:"C:\xampp\htdocs\clima-commit\views\layouts\main.php";s:4:"line";i:28;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10632280;}i:125;a:6:{i:0;s:2815:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'analytics'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.364441;i:4;a:2:{i:0;a:5:{s:4:"file";s:51:"C:\xampp\htdocs\clima-commit\views\layouts\main.php";s:4:"line";i:28;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10641488;}i:126;a:6:{i:0;s:2815:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'analytics'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.366412;i:4;a:2:{i:0;a:5:{s:4:"file";s:51:"C:\xampp\htdocs\clima-commit\views\layouts\main.php";s:4:"line";i:28;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10650448;}i:128;a:6:{i:0;s:877:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='analytics'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.366558;i:4;a:2:{i:0;a:5:{s:4:"file";s:51:"C:\xampp\htdocs\clima-commit\views\layouts\main.php";s:4:"line";i:28;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10648504;}i:129;a:6:{i:0;s:877:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='analytics'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.368301;i:4;a:2:{i:0;a:5:{s:4:"file";s:51:"C:\xampp\htdocs\clima-commit\views\layouts\main.php";s:4:"line";i:28;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10655752;}i:131;a:6:{i:0;s:74:"SELECT * FROM "notification" WHERE ("seen"=FALSE) AND ("recipient_id"=217)";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.36998;i:4;a:3:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\components\NotificationWidget.php";s:4:"line";i:52;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:51:"C:\xampp\htdocs\clima-commit\views\layouts\main.php";s:4:"line";i:158;s:8:"function";s:14:"createMenuItem";s:5:"class";s:33:"app\components\NotificationWidget";s:4:"type";s:2:"::";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10836768;}i:132;a:6:{i:0;s:74:"SELECT * FROM "notification" WHERE ("seen"=FALSE) AND ("recipient_id"=217)";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.370339;i:4;a:3:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\components\NotificationWidget.php";s:4:"line";i:52;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:51:"C:\xampp\htdocs\clima-commit\views\layouts\main.php";s:4:"line";i:158;s:8:"function";s:14:"createMenuItem";s:5:"class";s:33:"app\components\NotificationWidget";s:4:"type";s:2:"::";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10838992;}}}";s:2:"db";s:92121:"a:1:{s:8:"messages";a:82:{i:6;a:6:{i:0;s:35:"SELECT * FROM "user" WHERE "id"=217";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.316465;i:4;a:3:{i:0;a:5:{s:4:"file";s:84:"C:\xampp\htdocs\clima-commit\vendor\webvimark\module-user-management\models\User.php";s:4:"line";i:71;s:8:"function";s:7:"findOne";s:5:"class";s:23:"yii\db\BaseActiveRecord";s:4:"type";s:2:"::";}i:1;a:5:{s:4:"file";s:63:"C:\xampp\htdocs\clima-commit\components\EmailVerifiedFilter.php";s:4:"line";i:14;s:8:"function";s:14:"getCurrentUser";s:5:"class";s:44:"webvimark\modules\UserManagement\models\User";s:4:"type";s:2:"::";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:83;s:8:"function";s:12:"beforeAction";s:5:"class";s:18:"yii\web\Controller";s:4:"type";s:2:"->";}}i:5;i:7520408;}i:7;a:6:{i:0;s:35:"SELECT * FROM "user" WHERE "id"=217";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.316744;i:4;a:3:{i:0;a:5:{s:4:"file";s:84:"C:\xampp\htdocs\clima-commit\vendor\webvimark\module-user-management\models\User.php";s:4:"line";i:71;s:8:"function";s:7:"findOne";s:5:"class";s:23:"yii\db\BaseActiveRecord";s:4:"type";s:2:"::";}i:1;a:5:{s:4:"file";s:63:"C:\xampp\htdocs\clima-commit\components\EmailVerifiedFilter.php";s:4:"line";i:14;s:8:"function";s:14:"getCurrentUser";s:5:"class";s:44:"webvimark\modules\UserManagement\models\User";s:4:"type";s:2:"::";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:83;s:8:"function";s:12:"beforeAction";s:5:"class";s:18:"yii\web\Controller";s:4:"type";s:2:"->";}}i:5;i:7524000;}i:9;a:6:{i:0;s:147:"SELECT * FROM "email_verification" WHERE (("user_id"=217) AND ("status"=0)) AND ("expiry" > '2024-10-21T08:38:22+02:00') ORDER BY "created_at" DESC";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.317584;i:4;a:2:{i:0;a:5:{s:4:"file";s:63:"C:\xampp\htdocs\clima-commit\components\EmailVerifiedFilter.php";s:4:"line";i:19;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:83;s:8:"function";s:12:"beforeAction";s:5:"class";s:18:"yii\web\Controller";s:4:"type";s:2:"->";}}i:5;i:7591488;}i:10;a:6:{i:0;s:147:"SELECT * FROM "email_verification" WHERE (("user_id"=217) AND ("status"=0)) AND ("expiry" > '2024-10-21T08:38:22+02:00') ORDER BY "created_at" DESC";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.317995;i:4;a:2:{i:0;a:5:{s:4:"file";s:63:"C:\xampp\htdocs\clima-commit\components\EmailVerifiedFilter.php";s:4:"line";i:19;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:83;s:8:"function";s:12:"beforeAction";s:5:"class";s:18:"yii\web\Controller";s:4:"type";s:2:"->";}}i:5;i:7593296;}i:13;a:6:{i:0;s:30:"SELECT * FROM "jupyter_images"";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.318404;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:791;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7632896;}i:14;a:6:{i:0;s:30:"SELECT * FROM "jupyter_images"";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.318884;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:791;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7640600;}i:16;a:6:{i:0;s:2820:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'jupyter_images'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.319112;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:791;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7649384;}i:17;a:6:{i:0;s:2820:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'jupyter_images'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.321216;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:791;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7658256;}i:19;a:6:{i:0;s:882:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='jupyter_images'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.321382;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:791;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7655592;}i:20;a:6:{i:0;s:882:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='jupyter_images'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.322655;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:791;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7656832;}i:22;a:6:{i:0;s:57:"SELECT * FROM "jupyter_limits" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.323525;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:805;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7832152;}i:23;a:6:{i:0;s:57:"SELECT * FROM "jupyter_limits" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.323899;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:805;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7833968;}i:25;a:6:{i:0;s:2820:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'jupyter_limits'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.323995;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:805;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7840288;}i:26;a:6:{i:0;s:2820:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'jupyter_limits'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.325956;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:805;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7854848;}i:28;a:6:{i:0;s:882:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='jupyter_limits'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.326091;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:805;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7847960;}i:29;a:6:{i:0;s:882:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='jupyter_limits'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.32734;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:805;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:7849200;}i:31;a:6:{i:0;s:148:"SELECT COUNT(*) FROM "project_request" WHERE (("status" IN (1, 2)) AND ("project_type"=4) AND ("submitted_by"=217)) AND ("end_date" >= '2024-10-21')";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.32867;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:808;s:8:"function";s:5:"count";s:5:"class";s:12:"yii\db\Query";s:4:"type";s:2:"->";}}i:5;i:8097624;}i:32;a:6:{i:0;s:148:"SELECT COUNT(*) FROM "project_request" WHERE (("status" IN (1, 2)) AND ("project_type"=4) AND ("submitted_by"=217)) AND ("end_date" >= '2024-10-21')";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.329374;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:808;s:8:"function";s:5:"count";s:5:"class";s:12:"yii\db\Query";s:4:"type";s:2:"->";}}i:5;i:8098728;}i:34;a:6:{i:0;s:57:"SELECT * FROM "jupyter_limits" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.33033;i:4;a:2:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:57;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:816;s:8:"function";s:11:"__construct";s:5:"class";s:19:"yii\base\BaseObject";s:4:"type";s:2:"->";}}i:5;i:8162408;}i:35;a:6:{i:0;s:57:"SELECT * FROM "jupyter_limits" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.330506;i:4;a:2:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:57;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:816;s:8:"function";s:11:"__construct";s:5:"class";s:19:"yii\base\BaseObject";s:4:"type";s:2:"->";}}i:5;i:8164600;}i:37;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.330928;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:822;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8188136;}i:38;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.331225;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:822;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8189832;}i:40;a:6:{i:0;s:2824:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'jupyter_autoaccept'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.331319;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:822;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8196176;}i:41;a:6:{i:0;s:2824:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'jupyter_autoaccept'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.333251;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:822;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8207744;}i:43;a:6:{i:0;s:886:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='jupyter_autoaccept'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.333409;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:822;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8202936;}i:44;a:6:{i:0;s:886:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='jupyter_autoaccept'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.334676;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:822;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8204176;}i:46;a:6:{i:0;s:140:"SELECT COUNT(*) FROM "project_request" WHERE (("status"=2) AND ("project_type"=4) AND ("submitted_by"=217)) AND ("end_date" >= '2024-10-21')";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.334815;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:825;s:8:"function";s:5:"count";s:5:"class";s:12:"yii\db\Query";s:4:"type";s:2:"->";}}i:5;i:8207480;}i:47;a:6:{i:0;s:140:"SELECT COUNT(*) FROM "project_request" WHERE (("status"=2) AND ("project_type"=4) AND ("submitted_by"=217)) AND ("end_date" >= '2024-10-21')";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.335011;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:825;s:8:"function";s:5:"count";s:5:"class";s:12:"yii\db\Query";s:4:"type";s:2:"->";}}i:5;i:8208544;}i:49;a:6:{i:0;s:57:"SELECT * FROM "jupyter_limits" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.335102;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:832;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8208440;}i:50;a:6:{i:0;s:57:"SELECT * FROM "jupyter_limits" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.335246;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:832;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8210256;}i:52;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.335346;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:834;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8213040;}i:53;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.335478;i:4;a:1:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:834;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}}i:5;i:8214736;}i:57;a:6:{i:0;s:2821:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'project_request'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.343403;i:4;a:2:{i:0;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:80;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:9626080;}i:58;a:6:{i:0;s:2821:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'project_request'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.346006;i:4;a:2:{i:0;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:80;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:9658400;}i:60;a:6:{i:0;s:883:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='project_request'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.346279;i:4;a:2:{i:0;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:80;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:9640904;}i:61;a:6:{i:0;s:883:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='project_request'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.347572;i:4;a:2:{i:0;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:80;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:9642520;}i:63;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.352898;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:5:"label";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10403768;}i:64;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.353164;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:5:"label";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10406216;}i:66;a:6:{i:0;s:2823:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'jupyter_request_n'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.35358;i:4;a:2:{i:0;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10417800;}i:67;a:6:{i:0;s:2823:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'jupyter_request_n'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.355878;i:4;a:2:{i:0;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10437584;}i:69;a:6:{i:0;s:885:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='jupyter_request_n'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.356043;i:4;a:2:{i:0;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10428336;}i:70;a:6:{i:0;s:885:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='jupyter_request_n'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.357308;i:4;a:2:{i:0;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10429952;}i:72;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.357478;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10435488;}i:73;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.357626;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10437936;}i:75;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.357759;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10442432;}i:76;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.357894;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:96;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10444880;}i:79;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.35917;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:120;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10504504;}i:80;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.359312;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:120;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10506952;}i:82;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.359458;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:120;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10511776;}i:83;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.359595;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:120;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10514224;}i:85;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.359709;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:120;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10518400;}i:86;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.359869;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:120;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10520848;}i:88;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.360262;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:121;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10523720;}i:89;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.360442;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:121;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10526168;}i:91;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.360608;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:121;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10531592;}i:92;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.360775;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:121;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10534040;}i:94;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.360909;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:121;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10538248;}i:95;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.361046;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:121;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10540696;}i:97;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.361202;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:135;s:8:"function";s:5:"label";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10540848;}i:98;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.361334;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:135;s:8:"function";s:5:"label";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10543296;}i:100;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.361493;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:135;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10549184;}i:101;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.361626;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:135;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10551632;}i:103;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.361739;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:135;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10555464;}i:104;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.361866;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:135;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10557912;}i:106;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.361981;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:135;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10562000;}i:107;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.362111;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:135;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10564448;}i:109;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.362254;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:136;s:8:"function";s:5:"label";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10565592;}i:110;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.362384;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:136;s:8:"function";s:5:"label";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10568040;}i:112;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.362532;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:136;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10573928;}i:113;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.362661;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:136;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10576376;}i:115;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.362775;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:136;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10580368;}i:116;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.362903;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:136;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10582816;}i:118;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.363013;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:136;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10592472;}i:119;a:6:{i:0;s:61:"SELECT * FROM "jupyter_autoaccept" WHERE "user_type"='bronze'";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.363141;i:4;a:3:{i:0;a:5:{s:4:"file";s:57:"C:\xampp\htdocs\clima-commit\models\JupyterRequestNew.php";s:4:"line";i:104;s:8:"function";s:3:"one";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:66:"C:\xampp\htdocs\clima-commit\views\project\new_jupyter_request.php";s:4:"line";i:136;s:8:"function";s:10:"__toString";s:5:"class";s:23:"yii\widgets\ActiveField";s:4:"type";s:2:"->";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10594920;}i:122;a:6:{i:0;s:25:"SELECT * FROM "analytics"";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.364034;i:4;a:2:{i:0;a:5:{s:4:"file";s:51:"C:\xampp\htdocs\clima-commit\views\layouts\main.php";s:4:"line";i:28;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10629200;}i:123;a:6:{i:0;s:25:"SELECT * FROM "analytics"";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.364346;i:4;a:2:{i:0;a:5:{s:4:"file";s:51:"C:\xampp\htdocs\clima-commit\views\layouts\main.php";s:4:"line";i:28;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10632280;}i:125;a:6:{i:0;s:2815:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'analytics'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.364441;i:4;a:2:{i:0;a:5:{s:4:"file";s:51:"C:\xampp\htdocs\clima-commit\views\layouts\main.php";s:4:"line";i:28;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10641488;}i:126;a:6:{i:0;s:2815:"SELECT
    d.nspname AS table_schema,
    c.relname AS table_name,
    a.attname AS column_name,
    COALESCE(td.typname, tb.typname, t.typname) AS data_type,
    COALESCE(td.typtype, tb.typtype, t.typtype) AS type_type,
    (SELECT nspname FROM pg_namespace WHERE oid = COALESCE(td.typnamespace, tb.typnamespace, t.typnamespace)) AS type_scheme,
    a.attlen AS character_maximum_length,
    pg_catalog.col_description(c.oid, a.attnum) AS column_comment,
    a.atttypmod AS modifier,
    a.attnotnull = false AS is_nullable,
    CAST(pg_get_expr(ad.adbin, ad.adrelid) AS varchar) AS column_default,
    coalesce(pg_get_expr(ad.adbin, ad.adrelid) ~ 'nextval',false) OR attidentity != '' AS is_autoinc,
    pg_get_serial_sequence(quote_ident(d.nspname) || '.' || quote_ident(c.relname), a.attname) AS sequence_name,
    CASE WHEN COALESCE(td.typtype, tb.typtype, t.typtype) = 'e'::char
        THEN array_to_string((SELECT array_agg(enumlabel) FROM pg_enum WHERE enumtypid = COALESCE(td.oid, tb.oid, a.atttypid))::varchar[], ',')
        ELSE NULL
    END AS enum_values,
    CASE atttypid
         WHEN 21 /*int2*/ THEN 16
         WHEN 23 /*int4*/ THEN 32
         WHEN 20 /*int8*/ THEN 64
         WHEN 1700 /*numeric*/ THEN
              CASE WHEN atttypmod = -1
               THEN null
               ELSE ((atttypmod - 4) >> 16) & 65535
               END
         WHEN 700 /*float4*/ THEN 24 /*FLT_MANT_DIG*/
         WHEN 701 /*float8*/ THEN 53 /*DBL_MANT_DIG*/
         ELSE null
      END   AS numeric_precision,
      CASE
        WHEN atttypid IN (21, 23, 20) THEN 0
        WHEN atttypid IN (1700) THEN
        CASE
            WHEN atttypmod = -1 THEN null
            ELSE (atttypmod - 4) & 65535
        END
           ELSE null
      END AS numeric_scale,
    CAST(
             information_schema._pg_char_max_length(information_schema._pg_truetypid(a, t), information_schema._pg_truetypmod(a, t))
             AS numeric
    ) AS size,
    a.attnum = any (ct.conkey) as is_pkey,
    COALESCE(NULLIF(a.attndims, 0), NULLIF(t.typndims, 0), (t.typcategory='A')::int) AS dimension
FROM
    pg_class c
    LEFT JOIN pg_attribute a ON a.attrelid = c.oid
    LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
    LEFT JOIN pg_type t ON a.atttypid = t.oid
    LEFT JOIN pg_type tb ON (a.attndims > 0 OR t.typcategory='A') AND t.typelem > 0 AND t.typelem = tb.oid OR t.typbasetype > 0 AND t.typbasetype = tb.oid
    LEFT JOIN pg_type td ON t.typndims > 0 AND t.typbasetype > 0 AND tb.typelem = td.oid
    LEFT JOIN pg_namespace d ON d.oid = c.relnamespace
    LEFT JOIN pg_constraint ct ON ct.conrelid = c.oid AND ct.contype = 'p'
WHERE
    a.attnum > 0 AND t.typname != '' AND NOT a.attisdropped
    AND c.relname = 'analytics'
    AND d.nspname = 'public'
ORDER BY
    a.attnum;";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.366412;i:4;a:2:{i:0;a:5:{s:4:"file";s:51:"C:\xampp\htdocs\clima-commit\views\layouts\main.php";s:4:"line";i:28;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10650448;}i:128;a:6:{i:0;s:877:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='analytics'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.366558;i:4;a:2:{i:0;a:5:{s:4:"file";s:51:"C:\xampp\htdocs\clima-commit\views\layouts\main.php";s:4:"line";i:28;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10648504;}i:129;a:6:{i:0;s:877:"select
    ct.conname as constraint_name,
    a.attname as column_name,
    fc.relname as foreign_table_name,
    fns.nspname as foreign_table_schema,
    fa.attname as foreign_column_name
from
    (SELECT ct.conname, ct.conrelid, ct.confrelid, ct.conkey, ct.contype, ct.confkey, generate_subscripts(ct.conkey, 1) AS s
       FROM pg_constraint ct
    ) AS ct
    inner join pg_class c on c.oid=ct.conrelid
    inner join pg_namespace ns on c.relnamespace=ns.oid
    inner join pg_attribute a on a.attrelid=ct.conrelid and a.attnum = ct.conkey[ct.s]
    left join pg_class fc on fc.oid=ct.confrelid
    left join pg_namespace fns on fc.relnamespace=fns.oid
    left join pg_attribute fa on fa.attrelid=ct.confrelid and fa.attnum = ct.confkey[ct.s]
where
    ct.contype='f'
    and c.relname='analytics'
    and ns.nspname='public'
order by
    fns.nspname, fc.relname, a.attnum";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.368301;i:4;a:2:{i:0;a:5:{s:4:"file";s:51:"C:\xampp\htdocs\clima-commit\views\layouts\main.php";s:4:"line";i:28;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10655752;}i:131;a:6:{i:0;s:74:"SELECT * FROM "notification" WHERE ("seen"=FALSE) AND ("recipient_id"=217)";i:1;i:80;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.36998;i:4;a:3:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\components\NotificationWidget.php";s:4:"line";i:52;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:51:"C:\xampp\htdocs\clima-commit\views\layouts\main.php";s:4:"line";i:158;s:8:"function";s:14:"createMenuItem";s:5:"class";s:33:"app\components\NotificationWidget";s:4:"type";s:2:"::";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10836768;}i:132;a:6:{i:0;s:74:"SELECT * FROM "notification" WHERE ("seen"=FALSE) AND ("recipient_id"=217)";i:1;i:96;i:2;s:21:"yii\db\Command::query";i:3;d:1729492702.370339;i:4;a:3:{i:0;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\components\NotificationWidget.php";s:4:"line";i:52;s:8:"function";s:3:"all";s:5:"class";s:18:"yii\db\ActiveQuery";s:4:"type";s:2:"->";}i:1;a:5:{s:4:"file";s:51:"C:\xampp\htdocs\clima-commit\views\layouts\main.php";s:4:"line";i:158;s:8:"function";s:14:"createMenuItem";s:5:"class";s:33:"app\components\NotificationWidget";s:4:"type";s:2:"::";}i:2;a:5:{s:4:"file";s:62:"C:\xampp\htdocs\clima-commit\controllers\ProjectController.php";s:4:"line";i:938;s:8:"function";s:6:"render";s:5:"class";s:19:"yii\base\Controller";s:4:"type";s:2:"->";}}i:5;i:10838992;}}}";s:5:"event";s:29624:"a:169:{i:0;a:5:{s:4:"time";d:1729492702.280121;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:1;a:5:{s:4:"time";d:1729492702.297512;s:4:"name";s:9:"afterOpen";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:17:"yii\db\Connection";}i:2;a:5:{s:4:"time";d:1729492702.307111;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:44:"webvimark\modules\UserManagement\models\User";}i:3;a:5:{s:4:"time";d:1729492702.307134;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:44:"webvimark\modules\UserManagement\models\User";}i:4;a:5:{s:4:"time";d:1729492702.308757;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:44:"webvimark\modules\UserManagement\models\User";}i:5;a:5:{s:4:"time";d:1729492702.311184;s:4:"name";s:13:"beforeRequest";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:19:"yii\web\Application";}i:6;a:5:{s:4:"time";d:1729492702.314434;s:4:"name";s:12:"beforeAction";s:5:"class";s:20:"yii\base\ActionEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:19:"yii\web\Application";}i:7;a:5:{s:4:"time";d:1729492702.316422;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:8;a:5:{s:4:"time";d:1729492702.316847;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:44:"webvimark\modules\UserManagement\models\User";}i:9;a:5:{s:4:"time";d:1729492702.316864;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:44:"webvimark\modules\UserManagement\models\User";}i:10;a:5:{s:4:"time";d:1729492702.317109;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:11;a:5:{s:4:"time";d:1729492702.31806;s:4:"name";s:12:"beforeAction";s:5:"class";s:20:"yii\base\ActionEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:33:"app\controllers\ProjectController";}i:12;a:5:{s:4:"time";d:1729492702.318374;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:13;a:5:{s:4:"time";d:1729492702.319009;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:14;a:5:{s:4:"time";d:1729492702.32274;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:15;a:5:{s:4:"time";d:1729492702.322749;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:16;a:5:{s:4:"time";d:1729492702.322755;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:17;a:5:{s:4:"time";d:1729492702.32276;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:18;a:5:{s:4:"time";d:1729492702.322765;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:19;a:5:{s:4:"time";d:1729492702.322769;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:20;a:5:{s:4:"time";d:1729492702.322774;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:21;a:5:{s:4:"time";d:1729492702.322778;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:22;a:5:{s:4:"time";d:1729492702.322783;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:23;a:5:{s:4:"time";d:1729492702.322788;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:24;a:5:{s:4:"time";d:1729492702.322793;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:25;a:5:{s:4:"time";d:1729492702.322797;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:26;a:5:{s:4:"time";d:1729492702.322802;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:27;a:5:{s:4:"time";d:1729492702.322804;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:28;a:5:{s:4:"time";d:1729492702.322806;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:29;a:5:{s:4:"time";d:1729492702.322808;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:30;a:5:{s:4:"time";d:1729492702.32281;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:31;a:5:{s:4:"time";d:1729492702.322812;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:32;a:5:{s:4:"time";d:1729492702.322813;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:33;a:5:{s:4:"time";d:1729492702.322815;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:34;a:5:{s:4:"time";d:1729492702.322817;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:35;a:5:{s:4:"time";d:1729492702.322819;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:36;a:5:{s:4:"time";d:1729492702.322821;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:37;a:5:{s:4:"time";d:1729492702.322823;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:38;a:5:{s:4:"time";d:1729492702.322825;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterImages";}i:39;a:5:{s:4:"time";d:1729492702.323482;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:40;a:5:{s:4:"time";d:1729492702.32396;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterLimits";}i:41;a:5:{s:4:"time";d:1729492702.327424;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterLimits";}i:42;a:5:{s:4:"time";d:1729492702.328283;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:43;a:5:{s:4:"time";d:1729492702.330204;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterRequestNew";}i:44;a:5:{s:4:"time";d:1729492702.330261;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:45;a:5:{s:4:"time";d:1729492702.330587;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterLimits";}i:46;a:5:{s:4:"time";d:1729492702.330608;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterLimits";}i:47;a:5:{s:4:"time";d:1729492702.330615;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:25:"app\models\ProjectRequest";}i:48;a:5:{s:4:"time";d:1729492702.330619;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterLimits";}i:49;a:5:{s:4:"time";d:1729492702.330855;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:50;a:5:{s:4:"time";d:1729492702.330867;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:51;a:5:{s:4:"time";d:1729492702.331285;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:52;a:5:{s:4:"time";d:1729492702.334758;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:53;a:5:{s:4:"time";d:1729492702.334766;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:54;a:5:{s:4:"time";d:1729492702.335071;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:55;a:5:{s:4:"time";d:1729492702.335301;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterLimits";}i:56;a:5:{s:4:"time";d:1729492702.335312;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:24:"app\models\JupyterLimits";}i:57;a:5:{s:4:"time";d:1729492702.335318;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:58;a:5:{s:4:"time";d:1729492702.335531;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:59;a:5:{s:4:"time";d:1729492702.335541;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:60;a:5:{s:4:"time";d:1729492702.336645;s:4:"name";s:12:"beforeRender";s:5:"class";s:18:"yii\base\ViewEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:12:"yii\web\View";}i:61;a:5:{s:4:"time";d:1729492702.340485;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:22:"app\components\Headers";}i:62;a:5:{s:4:"time";d:1729492702.340499;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:22:"app\components\Headers";}i:63;a:5:{s:4:"time";d:1729492702.340606;s:4:"name";s:9:"beforeRun";s:5:"class";s:20:"yii\base\WidgetEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:22:"app\components\Headers";}i:64;a:5:{s:4:"time";d:1729492702.340752;s:4:"name";s:12:"beforeRender";s:5:"class";s:18:"yii\base\ViewEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:12:"yii\web\View";}i:65;a:5:{s:4:"time";d:1729492702.340855;s:4:"name";s:11:"afterRender";s:5:"class";s:18:"yii\base\ViewEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:12:"yii\web\View";}i:66;a:5:{s:4:"time";d:1729492702.34086;s:4:"name";s:8:"afterRun";s:5:"class";s:20:"yii\base\WidgetEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:22:"app\components\Headers";}i:67;a:5:{s:4:"time";d:1729492702.341096;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:22:"yii\widgets\ActiveForm";}i:68;a:5:{s:4:"time";d:1729492702.35121;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:22:"kartik\date\DatePicker";}i:69;a:5:{s:4:"time";d:1729492702.351476;s:4:"name";s:9:"beforeRun";s:5:"class";s:20:"yii\base\WidgetEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:22:"kartik\date\DatePicker";}i:70;a:5:{s:4:"time";d:1729492702.352806;s:4:"name";s:18:"missingTranslation";s:5:"class";s:32:"yii\i18n\MissingTranslationEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:25:"yii\i18n\PhpMessageSource";}i:71;a:5:{s:4:"time";d:1729492702.352823;s:4:"name";s:18:"missingTranslation";s:5:"class";s:32:"yii\i18n\MissingTranslationEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:25:"yii\i18n\PhpMessageSource";}i:72;a:5:{s:4:"time";d:1729492702.352835;s:4:"name";s:8:"afterRun";s:5:"class";s:20:"yii\base\WidgetEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:22:"kartik\date\DatePicker";}i:73;a:5:{s:4:"time";d:1729492702.352857;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:74;a:5:{s:4:"time";d:1729492702.353302;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:75;a:5:{s:4:"time";d:1729492702.353342;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:76;a:5:{s:4:"time";d:1729492702.357439;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:77;a:5:{s:4:"time";d:1729492702.357683;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:78;a:5:{s:4:"time";d:1729492702.357696;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:79;a:5:{s:4:"time";d:1729492702.357725;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:80;a:5:{s:4:"time";d:1729492702.35795;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:81;a:5:{s:4:"time";d:1729492702.357961;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:82;a:5:{s:4:"time";d:1729492702.358169;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:29:"app\components\MagicSearchBox";}i:83;a:5:{s:4:"time";d:1729492702.358173;s:4:"name";s:9:"beforeRun";s:5:"class";s:20:"yii\base\WidgetEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:29:"app\components\MagicSearchBox";}i:84;a:5:{s:4:"time";d:1729492702.358238;s:4:"name";s:12:"beforeRender";s:5:"class";s:18:"yii\base\ViewEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:12:"yii\web\View";}i:85;a:5:{s:4:"time";d:1729492702.358769;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:20:"yii\jui\AutoComplete";}i:86;a:5:{s:4:"time";d:1729492702.358773;s:4:"name";s:9:"beforeRun";s:5:"class";s:20:"yii\base\WidgetEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:20:"yii\jui\AutoComplete";}i:87;a:5:{s:4:"time";d:1729492702.359069;s:4:"name";s:8:"afterRun";s:5:"class";s:20:"yii\base\WidgetEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:20:"yii\jui\AutoComplete";}i:88;a:5:{s:4:"time";d:1729492702.35908;s:4:"name";s:11:"afterRender";s:5:"class";s:18:"yii\base\ViewEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:12:"yii\web\View";}i:89;a:5:{s:4:"time";d:1729492702.359084;s:4:"name";s:8:"afterRun";s:5:"class";s:20:"yii\base\WidgetEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:29:"app\components\MagicSearchBox";}i:90;a:5:{s:4:"time";d:1729492702.359132;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:91;a:5:{s:4:"time";d:1729492702.35937;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:92;a:5:{s:4:"time";d:1729492702.359382;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:93;a:5:{s:4:"time";d:1729492702.359419;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:94;a:5:{s:4:"time";d:1729492702.35965;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:95;a:5:{s:4:"time";d:1729492702.35966;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:96;a:5:{s:4:"time";d:1729492702.359676;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:97;a:5:{s:4:"time";d:1729492702.36003;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:98;a:5:{s:4:"time";d:1729492702.360057;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:99;a:5:{s:4:"time";d:1729492702.360203;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:100;a:5:{s:4:"time";d:1729492702.360506;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:101;a:5:{s:4:"time";d:1729492702.360521;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:102;a:5:{s:4:"time";d:1729492702.360567;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:103;a:5:{s:4:"time";d:1729492702.360845;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:104;a:5:{s:4:"time";d:1729492702.360857;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:105;a:5:{s:4:"time";d:1729492702.360875;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:106;a:5:{s:4:"time";d:1729492702.361104;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:107;a:5:{s:4:"time";d:1729492702.361113;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:108;a:5:{s:4:"time";d:1729492702.361169;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:109;a:5:{s:4:"time";d:1729492702.361391;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:110;a:5:{s:4:"time";d:1729492702.361401;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:111;a:5:{s:4:"time";d:1729492702.361461;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:112;a:5:{s:4:"time";d:1729492702.361682;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:113;a:5:{s:4:"time";d:1729492702.361692;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:114;a:5:{s:4:"time";d:1729492702.361709;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:115;a:5:{s:4:"time";d:1729492702.361923;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:116;a:5:{s:4:"time";d:1729492702.361933;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:117;a:5:{s:4:"time";d:1729492702.361951;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:118;a:5:{s:4:"time";d:1729492702.362169;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:119;a:5:{s:4:"time";d:1729492702.362178;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:120;a:5:{s:4:"time";d:1729492702.362225;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:121;a:5:{s:4:"time";d:1729492702.362439;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:122;a:5:{s:4:"time";d:1729492702.362448;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:123;a:5:{s:4:"time";d:1729492702.362503;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:124;a:5:{s:4:"time";d:1729492702.362716;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:125;a:5:{s:4:"time";d:1729492702.362726;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:126;a:5:{s:4:"time";d:1729492702.362746;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:127;a:5:{s:4:"time";d:1729492702.362959;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:128;a:5:{s:4:"time";d:1729492702.362968;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:129;a:5:{s:4:"time";d:1729492702.362985;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:130;a:5:{s:4:"time";d:1729492702.363195;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:131;a:5:{s:4:"time";d:1729492702.363204;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:28:"app\models\JupyterAutoaccept";}i:132;a:5:{s:4:"time";d:1729492702.363252;s:4:"name";s:9:"beforeRun";s:5:"class";s:20:"yii\base\WidgetEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:22:"yii\widgets\ActiveForm";}i:133;a:5:{s:4:"time";d:1729492702.363438;s:4:"name";s:8:"afterRun";s:5:"class";s:20:"yii\base\WidgetEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:22:"yii\widgets\ActiveForm";}i:134;a:5:{s:4:"time";d:1729492702.36345;s:4:"name";s:11:"afterRender";s:5:"class";s:18:"yii\base\ViewEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:12:"yii\web\View";}i:135;a:5:{s:4:"time";d:1729492702.363485;s:4:"name";s:12:"beforeRender";s:5:"class";s:18:"yii\base\ViewEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:12:"yii\web\View";}i:136;a:5:{s:4:"time";d:1729492702.364004;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:137;a:5:{s:4:"time";d:1729492702.364406;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:20:"app\models\Analytics";}i:138;a:5:{s:4:"time";d:1729492702.368409;s:4:"name";s:9:"afterFind";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:20:"app\models\Analytics";}i:139;a:5:{s:4:"time";d:1729492702.368457;s:4:"name";s:9:"beginPage";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:12:"yii\web\View";}i:140;a:5:{s:4:"time";d:1729492702.368488;s:4:"name";s:9:"beginBody";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:12:"yii\web\View";}i:141;a:5:{s:4:"time";d:1729492702.36941;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:20:"yii\bootstrap\NavBar";}i:142;a:5:{s:4:"time";d:1729492702.369931;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:18:"yii\db\ActiveQuery";}i:143;a:5:{s:4:"time";d:1729492702.370731;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:17:"yii\bootstrap\Nav";}i:144;a:5:{s:4:"time";d:1729492702.370742;s:4:"name";s:9:"beforeRun";s:5:"class";s:20:"yii\base\WidgetEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:17:"yii\bootstrap\Nav";}i:145;a:5:{s:4:"time";d:1729492702.370963;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:22:"yii\bootstrap\Dropdown";}i:146;a:5:{s:4:"time";d:1729492702.370968;s:4:"name";s:9:"beforeRun";s:5:"class";s:20:"yii\base\WidgetEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:22:"yii\bootstrap\Dropdown";}i:147;a:5:{s:4:"time";d:1729492702.371073;s:4:"name";s:8:"afterRun";s:5:"class";s:20:"yii\base\WidgetEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:22:"yii\bootstrap\Dropdown";}i:148;a:5:{s:4:"time";d:1729492702.371086;s:4:"name";s:8:"afterRun";s:5:"class";s:20:"yii\base\WidgetEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:17:"yii\bootstrap\Nav";}i:149;a:5:{s:4:"time";d:1729492702.371093;s:4:"name";s:9:"beforeRun";s:5:"class";s:20:"yii\base\WidgetEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:20:"yii\bootstrap\NavBar";}i:150;a:5:{s:4:"time";d:1729492702.371097;s:4:"name";s:8:"afterRun";s:5:"class";s:20:"yii\base\WidgetEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:20:"yii\bootstrap\NavBar";}i:151;a:5:{s:4:"time";d:1729492702.371217;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:23:"yii\widgets\Breadcrumbs";}i:152;a:5:{s:4:"time";d:1729492702.37122;s:4:"name";s:9:"beforeRun";s:5:"class";s:20:"yii\base\WidgetEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:23:"yii\widgets\Breadcrumbs";}i:153;a:5:{s:4:"time";d:1729492702.371226;s:4:"name";s:8:"afterRun";s:5:"class";s:20:"yii\base\WidgetEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:23:"yii\widgets\Breadcrumbs";}i:154;a:5:{s:4:"time";d:1729492702.371342;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:17:"app\widgets\Alert";}i:155;a:5:{s:4:"time";d:1729492702.371346;s:4:"name";s:9:"beforeRun";s:5:"class";s:20:"yii\base\WidgetEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:17:"app\widgets\Alert";}i:156;a:5:{s:4:"time";d:1729492702.371359;s:4:"name";s:4:"init";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:19:"yii\bootstrap\Alert";}i:157;a:5:{s:4:"time";d:1729492702.371373;s:4:"name";s:9:"beforeRun";s:5:"class";s:20:"yii\base\WidgetEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:19:"yii\bootstrap\Alert";}i:158;a:5:{s:4:"time";d:1729492702.37138;s:4:"name";s:8:"afterRun";s:5:"class";s:20:"yii\base\WidgetEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:19:"yii\bootstrap\Alert";}i:159;a:5:{s:4:"time";d:1729492702.371384;s:4:"name";s:8:"afterRun";s:5:"class";s:20:"yii\base\WidgetEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:17:"app\widgets\Alert";}i:160;a:5:{s:4:"time";d:1729492702.371622;s:4:"name";s:7:"endBody";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:12:"yii\web\View";}i:161;a:5:{s:4:"time";d:1729492702.37255;s:4:"name";s:7:"endPage";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:12:"yii\web\View";}i:162;a:5:{s:4:"time";d:1729492702.37263;s:4:"name";s:11:"afterRender";s:5:"class";s:18:"yii\base\ViewEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:12:"yii\web\View";}i:163;a:5:{s:4:"time";d:1729492702.372647;s:4:"name";s:11:"afterAction";s:5:"class";s:20:"yii\base\ActionEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:33:"app\controllers\ProjectController";}i:164;a:5:{s:4:"time";d:1729492702.37265;s:4:"name";s:11:"afterAction";s:5:"class";s:20:"yii\base\ActionEvent";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:19:"yii\web\Application";}i:165;a:5:{s:4:"time";d:1729492702.372654;s:4:"name";s:12:"afterRequest";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:19:"yii\web\Application";}i:166;a:5:{s:4:"time";d:1729492702.372657;s:4:"name";s:10:"beforeSend";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:16:"yii\web\Response";}i:167;a:5:{s:4:"time";d:1729492702.372812;s:4:"name";s:12:"afterPrepare";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:16:"yii\web\Response";}i:168;a:5:{s:4:"time";d:1729492702.372828;s:4:"name";s:9:"afterSend";s:5:"class";s:14:"yii\base\Event";s:8:"isStatic";s:1:"0";s:11:"senderClass";s:16:"yii\web\Response";}}";s:4:"mail";s:6:"a:0:{}";s:8:"timeline";s:92:"a:3:{s:5:"start";d:1729492702.267927;s:3:"end";d:1729492702.373713;s:6:"memory";i:11073712;}";s:4:"dump";s:6:"a:0:{}";s:6:"router";s:340:"a:3:{s:8:"messages";a:1:{i:2;a:6:{i:0;s:56:"Pretty URL not enabled. Using default URL parsing logic.";i:1;i:8;i:2;s:32:"yii\web\UrlManager::parseRequest";i:3;d:1729492702.311189;i:4;a:0:{}i:5;i:6535656;}}s:5:"route";s:31:"project/new-jupyter-request-new";s:6:"action";s:63:"app\controllers\ProjectController::actionNewJupyterRequestNew()";}";s:7:"request";s:4893:"a:15:{s:7:"flashes";a:0:{}s:10:"statusCode";i:200;s:14:"requestHeaders";a:16:{s:4:"host";s:14:"localhost:7777";s:10:"connection";s:10:"keep-alive";s:9:"sec-ch-ua";s:64:""Google Chrome";v="129", "Not=A?Brand";v="8", "Chromium";v="129"";s:16:"sec-ch-ua-mobile";s:2:"?0";s:18:"sec-ch-ua-platform";s:9:""Windows"";s:25:"upgrade-insecure-requests";s:1:"1";s:10:"user-agent";s:111:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36";s:6:"accept";s:135:"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7";s:14:"sec-fetch-site";s:11:"same-origin";s:14:"sec-fetch-mode";s:8:"navigate";s:14:"sec-fetch-user";s:2:"?1";s:14:"sec-fetch-dest";s:8:"document";s:7:"referer";s:55:"http://localhost:7777/index.php?r=project%2Fnew-request";s:15:"accept-encoding";s:23:"gzip, deflate, br, zstd";s:15:"accept-language";s:35:"el-GR,el;q=0.9,en-GR;q=0.8,en;q=0.7";s:6:"cookie";s:307:"PHPSESSID=bv0hvma3gk5ogh9upp52t1hcdc; _csrf=e543ee8c02ffeda556abefc8c4ee01cb5488a0e570ab29124e6023429c7c4762a%3A2%3A%7Bi%3A0%3Bs%3A5%3A%22_csrf%22%3Bi%3A1%3Bs%3A32%3A%22obUp7CurlaCPJRfWksAWz_K2f3m_3Ja_%22%3B%7D; _dd_s=logs=1&id=0da0fbdf-6ce0-406e-8a45-4ba82a42d398&created=1729490495715&expire=1729493602258";}s:15:"responseHeaders";a:8:{s:12:"X-Powered-By";s:9:"PHP/8.2.4";s:7:"Expires";s:29:"Thu, 19 Nov 1981 08:52:00 GMT";s:13:"Cache-Control";s:35:"no-store, no-cache, must-revalidate";s:6:"Pragma";s:8:"no-cache";s:12:"Content-Type";s:24:"text/html; charset=UTF-8";s:11:"X-Debug-Tag";s:13:"6715f6de4bb8f";s:16:"X-Debug-Duration";s:3:"106";s:12:"X-Debug-Link";s:53:"/index.php?r=debug%2Fdefault%2Fview&tag=6715f6de4bb8f";}s:5:"route";s:31:"project/new-jupyter-request-new";s:6:"action";s:63:"app\controllers\ProjectController::actionNewJupyterRequestNew()";s:12:"actionParams";a:0:{}s:7:"general";a:5:{s:6:"method";s:3:"GET";s:6:"isAjax";b:0;s:6:"isPjax";b:0;s:7:"isFlash";b:0;s:18:"isSecureConnection";b:0;}s:11:"requestBody";a:0:{}s:6:"SERVER";a:31:{s:13:"DOCUMENT_ROOT";s:32:"C:\xampp\htdocs\clima-commit\web";s:11:"REMOTE_ADDR";s:3:"::1";s:11:"REMOTE_PORT";s:5:"55383";s:15:"SERVER_SOFTWARE";s:28:"PHP 8.2.4 Development Server";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:11:"SERVER_NAME";s:9:"localhost";s:11:"SERVER_PORT";s:4:"7777";s:11:"REQUEST_URI";s:46:"/index.php?r=project%2Fnew-jupyter-request-new";s:14:"REQUEST_METHOD";s:3:"GET";s:11:"SCRIPT_NAME";s:10:"/index.php";s:15:"SCRIPT_FILENAME";s:42:"C:\xampp\htdocs\clima-commit\web\index.php";s:8:"PHP_SELF";s:10:"/index.php";s:12:"QUERY_STRING";s:35:"r=project%2Fnew-jupyter-request-new";s:9:"HTTP_HOST";s:14:"localhost:7777";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:14:"HTTP_SEC_CH_UA";s:64:""Google Chrome";v="129", "Not=A?Brand";v="8", "Chromium";v="129"";s:21:"HTTP_SEC_CH_UA_MOBILE";s:2:"?0";s:23:"HTTP_SEC_CH_UA_PLATFORM";s:9:""Windows"";s:30:"HTTP_UPGRADE_INSECURE_REQUESTS";s:1:"1";s:15:"HTTP_USER_AGENT";s:111:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36";s:11:"HTTP_ACCEPT";s:135:"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7";s:19:"HTTP_SEC_FETCH_SITE";s:11:"same-origin";s:19:"HTTP_SEC_FETCH_MODE";s:8:"navigate";s:19:"HTTP_SEC_FETCH_USER";s:2:"?1";s:19:"HTTP_SEC_FETCH_DEST";s:8:"document";s:12:"HTTP_REFERER";s:55:"http://localhost:7777/index.php?r=project%2Fnew-request";s:20:"HTTP_ACCEPT_ENCODING";s:23:"gzip, deflate, br, zstd";s:20:"HTTP_ACCEPT_LANGUAGE";s:35:"el-GR,el;q=0.9,en-GR;q=0.8,en;q=0.7";s:11:"HTTP_COOKIE";s:307:"PHPSESSID=bv0hvma3gk5ogh9upp52t1hcdc; _csrf=e543ee8c02ffeda556abefc8c4ee01cb5488a0e570ab29124e6023429c7c4762a%3A2%3A%7Bi%3A0%3Bs%3A5%3A%22_csrf%22%3Bi%3A1%3Bs%3A32%3A%22obUp7CurlaCPJRfWksAWz_K2f3m_3Ja_%22%3B%7D; _dd_s=logs=1&id=0da0fbdf-6ce0-406e-8a45-4ba82a42d398&created=1729490495715&expire=1729493602258";s:18:"REQUEST_TIME_FLOAT";d:1729492702.267155;s:12:"REQUEST_TIME";i:1729492702;}s:3:"GET";a:1:{s:1:"r";s:31:"project/new-jupyter-request-new";}s:4:"POST";a:0:{}s:6:"COOKIE";a:3:{s:9:"PHPSESSID";s:26:"bv0hvma3gk5ogh9upp52t1hcdc";s:5:"_csrf";s:130:"e543ee8c02ffeda556abefc8c4ee01cb5488a0e570ab29124e6023429c7c4762a:2:{i:0;s:5:"_csrf";i:1;s:32:"obUp7CurlaCPJRfWksAWz_K2f3m_3Ja_";}";s:5:"_dd_s";s:89:"logs=1&id=0da0fbdf-6ce0-406e-8a45-4ba82a42d398&created=1729490495715&expire=1729493602258";}s:5:"FILES";a:0:{}s:7:"SESSION";a:11:{s:7:"__flash";a:0:{}s:16:"_um_last_attempt";i:1729492683;s:17:"_um_attempt_count";i:1;s:18:"__auth_last_update";i:1728377854;s:14:"__visitorToken";s:13:"6715f6cbecba5";s:11:"__returnUrl";s:32:"/index.php?r=ticket-user%2Findex";s:4:"__id";i:217;s:9:"__authKey";s:32:"gLMB9vX6J1Ww54AM6_yAmVl1DAKY1sBm";s:11:"__userRoles";a:0:{}s:17:"__userPermissions";a:0:{}s:12:"__userRoutes";a:0:{}}}";s:4:"user";s:1731:"a:5:{s:2:"id";i:217;s:8:"identity";a:15:{s:2:"id";s:3:"217";s:8:"username";s:12:"'superadmin'";s:8:"auth_key";s:34:"'gLMB9vX6J1Ww54AM6_yAmVl1DAKY1sBm'";s:13:"password_hash";s:62:"'$2y$13$ULo4XN7L0vTzfcbjDuaRGus2CyGHrn9bFv6h55WReV133hCRqeWTa'";s:18:"confirmation_token";s:4:"null";s:6:"status";s:1:"1";s:10:"superadmin";s:1:"1";s:10:"created_at";s:10:"1729492671";s:10:"updated_at";s:10:"1729492671";s:15:"registration_ip";s:4:"null";s:10:"bind_to_ip";s:4:"null";s:5:"email";s:18:"'user@example.com'";s:15:"email_confirmed";s:1:"1";s:4:"name";s:4:"null";s:7:"surname";s:4:"null";}s:10:"attributes";a:15:{i:0;a:2:{s:9:"attribute";s:2:"id";s:5:"label";s:2:"ID";}i:1;a:2:{s:9:"attribute";s:8:"username";s:5:"label";s:5:"Login";}i:2;a:2:{s:9:"attribute";s:8:"auth_key";s:5:"label";s:8:"Auth Key";}i:3;a:2:{s:9:"attribute";s:13:"password_hash";s:5:"label";s:13:"Password Hash";}i:4;a:2:{s:9:"attribute";s:18:"confirmation_token";s:5:"label";s:18:"Confirmation Token";}i:5;a:2:{s:9:"attribute";s:6:"status";s:5:"label";s:6:"Status";}i:6;a:2:{s:9:"attribute";s:10:"superadmin";s:5:"label";s:10:"Superadmin";}i:7;a:2:{s:9:"attribute";s:10:"created_at";s:5:"label";s:7:"Created";}i:8;a:2:{s:9:"attribute";s:10:"updated_at";s:5:"label";s:7:"Updated";}i:9;a:2:{s:9:"attribute";s:15:"registration_ip";s:5:"label";s:15:"Registration IP";}i:10;a:2:{s:9:"attribute";s:10:"bind_to_ip";s:5:"label";s:10:"Bind to IP";}i:11;a:2:{s:9:"attribute";s:5:"email";s:5:"label";s:6:"E-mail";}i:12;a:2:{s:9:"attribute";s:15:"email_confirmed";s:5:"label";s:16:"E-mail confirmed";}i:13;a:2:{s:9:"attribute";s:4:"name";s:5:"label";s:4:"Name";}i:14;a:2:{s:9:"attribute";s:7:"surname";s:5:"label";s:7:"Surname";}}s:13:"rolesProvider";N;s:19:"permissionsProvider";N;}";s:5:"asset";s:6064:"a:14:{s:30:"/js/project/project-request.js";a:9:{s:10:"sourcePath";N;s:8:"basePath";s:32:"C:\xampp\htdocs\clima-commit\web";s:7:"baseUrl";s:0:"";s:7:"depends";a:1:{i:0;s:19:"yii\web\JqueryAsset";}s:2:"js";a:1:{i:0;a:1:{i:0;s:29:"js/project/project-request.js";}}s:3:"css";a:0:{}s:9:"jsOptions";a:0:{}s:10:"cssOptions";a:0:{}s:14:"publishOptions";a:0:{}}s:19:"yii\web\JqueryAsset";a:9:{s:10:"sourcePath";s:59:"C:\xampp\htdocs\clima-commit\vendor/bower-asset/jquery/dist";s:8:"basePath";s:48:"C:\xampp\htdocs\clima-commit\web\assets\d14b0546";s:7:"baseUrl";s:16:"/assets/d14b0546";s:7:"depends";a:0:{}s:2:"js";a:1:{i:0;s:9:"jquery.js";}s:3:"css";a:0:{}s:9:"jsOptions";a:0:{}s:10:"cssOptions";a:0:{}s:14:"publishOptions";a:0:{}}s:30:"yii\validators\ValidationAsset";a:9:{s:10:"sourcePath";s:55:"C:\xampp\htdocs\clima-commit\vendor\yiisoft\yii2/assets";s:8:"basePath";s:47:"C:\xampp\htdocs\clima-commit\web\assets\3b797ec";s:7:"baseUrl";s:15:"/assets/3b797ec";s:7:"depends";a:1:{i:0;s:16:"yii\web\YiiAsset";}s:2:"js";a:1:{i:0;s:17:"yii.validation.js";}s:3:"css";a:0:{}s:9:"jsOptions";a:0:{}s:10:"cssOptions";a:0:{}s:14:"publishOptions";a:0:{}}s:16:"yii\web\YiiAsset";a:9:{s:10:"sourcePath";s:55:"C:\xampp\htdocs\clima-commit\vendor\yiisoft\yii2/assets";s:8:"basePath";s:47:"C:\xampp\htdocs\clima-commit\web\assets\3b797ec";s:7:"baseUrl";s:15:"/assets/3b797ec";s:7:"depends";a:1:{i:0;s:19:"yii\web\JqueryAsset";}s:2:"js";a:1:{i:0;s:6:"yii.js";}s:3:"css";a:0:{}s:9:"jsOptions";a:0:{}s:10:"cssOptions";a:0:{}s:14:"publishOptions";a:0:{}}s:27:"kartik\date\DatePickerAsset";a:17:{s:10:"sourcePath";s:78:"C:\xampp\htdocs\clima-commit\vendor\kartik-v\yii2-widget-datepicker\src/assets";s:8:"basePath";s:47:"C:\xampp\htdocs\clima-commit\web\assets\983936d";s:7:"baseUrl";s:15:"/assets/983936d";s:7:"depends";a:1:{i:0;s:16:"yii\web\YiiAsset";}s:2:"js";a:2:{i:0;s:26:"js/bootstrap-datepicker.js";i:1;s:19:"js/datepicker-kv.js";}s:3:"css";a:2:{i:0;s:29:"css/bootstrap-datepicker3.css";i:1;s:21:"css/datepicker-kv.css";}s:9:"jsOptions";a:0:{}s:10:"cssOptions";a:0:{}s:14:"publishOptions";a:0:{}s:19:"bsDependencyEnabled";b:0;s:15:"bsPluginEnabled";b:0;s:9:"bsVersion";N;s:16:"bsColCssPrefixes";a:0:{}s:9:" * _bsVer";i:3;s:21:" * _defaultIconPrefix";N;s:17:" * _defaultBtnCss";N;s:9:" * _isBs4";N;}s:23:"kartik\base\WidgetAsset";a:17:{s:10:"sourcePath";s:72:"C:\xampp\htdocs\clima-commit\vendor\kartik-v\yii2-krajee-base\src/assets";s:8:"basePath";s:48:"C:\xampp\htdocs\clima-commit\web\assets\11a58e7a";s:7:"baseUrl";s:16:"/assets/11a58e7a";s:7:"depends";a:1:{i:0;s:16:"yii\web\YiiAsset";}s:2:"js";a:1:{i:0;s:16:"js/kv-widgets.js";}s:3:"css";a:1:{i:0;s:18:"css/kv-widgets.css";}s:9:"jsOptions";a:0:{}s:10:"cssOptions";a:0:{}s:14:"publishOptions";a:0:{}s:19:"bsDependencyEnabled";b:0;s:15:"bsPluginEnabled";b:0;s:9:"bsVersion";N;s:16:"bsColCssPrefixes";a:0:{}s:9:" * _bsVer";N;s:21:" * _defaultIconPrefix";N;s:17:" * _defaultBtnCss";N;s:9:" * _isBs4";N;}s:34:"/js/components/magic_search_box.js";a:9:{s:10:"sourcePath";N;s:8:"basePath";s:32:"C:\xampp\htdocs\clima-commit\web";s:7:"baseUrl";s:0:"";s:7:"depends";a:1:{i:0;s:19:"yii\web\JqueryAsset";}s:2:"js";a:1:{i:0;a:1:{i:0;s:33:"js/components/magic_search_box.js";}}s:3:"css";a:0:{}s:9:"jsOptions";a:0:{}s:10:"cssOptions";a:0:{}s:14:"publishOptions";a:0:{}}s:16:"yii\jui\JuiAsset";a:9:{s:10:"sourcePath";s:57:"C:\xampp\htdocs\clima-commit\vendor/bower-asset/jquery-ui";s:8:"basePath";s:48:"C:\xampp\htdocs\clima-commit\web\assets\d089417f";s:7:"baseUrl";s:16:"/assets/d089417f";s:7:"depends";a:1:{i:0;s:19:"yii\web\JqueryAsset";}s:2:"js";a:1:{i:0;s:12:"jquery-ui.js";}s:3:"css";a:1:{i:0;s:31:"themes/smoothness/jquery-ui.css";}s:9:"jsOptions";a:0:{}s:10:"cssOptions";a:0:{}s:14:"publishOptions";a:0:{}}s:27:"yii\widgets\ActiveFormAsset";a:9:{s:10:"sourcePath";s:55:"C:\xampp\htdocs\clima-commit\vendor\yiisoft\yii2/assets";s:8:"basePath";s:47:"C:\xampp\htdocs\clima-commit\web\assets\3b797ec";s:7:"baseUrl";s:15:"/assets/3b797ec";s:7:"depends";a:1:{i:0;s:16:"yii\web\YiiAsset";}s:2:"js";a:1:{i:0;s:17:"yii.activeForm.js";}s:3:"css";a:0:{}s:9:"jsOptions";a:0:{}s:10:"cssOptions";a:0:{}s:14:"publishOptions";a:0:{}}s:19:"app\assets\AppAsset";a:9:{s:10:"sourcePath";N;s:8:"basePath";s:32:"C:\xampp\htdocs\clima-commit\web";s:7:"baseUrl";s:0:"";s:7:"depends";a:2:{i:0;s:16:"yii\web\YiiAsset";i:1;s:28:"yii\bootstrap\BootstrapAsset";}s:2:"js";a:0:{}s:3:"css";a:1:{i:0;s:12:"css/site.css";}s:9:"jsOptions";a:0:{}s:10:"cssOptions";a:0:{}s:14:"publishOptions";a:0:{}}s:28:"yii\bootstrap\BootstrapAsset";a:9:{s:10:"sourcePath";s:62:"C:\xampp\htdocs\clima-commit\vendor/bower-asset/bootstrap/dist";s:8:"basePath";s:48:"C:\xampp\htdocs\clima-commit\web\assets\ece30cab";s:7:"baseUrl";s:16:"/assets/ece30cab";s:7:"depends";a:0:{}s:2:"js";a:0:{}s:3:"css";a:1:{i:0;s:17:"css/bootstrap.css";}s:9:"jsOptions";a:0:{}s:10:"cssOptions";a:0:{}s:14:"publishOptions";a:0:{}}s:36:"/js/components/notificationWidget.js";a:9:{s:10:"sourcePath";N;s:8:"basePath";s:32:"C:\xampp\htdocs\clima-commit\web";s:7:"baseUrl";s:0:"";s:7:"depends";a:1:{i:0;s:19:"yii\web\JqueryAsset";}s:2:"js";a:1:{i:0;a:1:{i:0;s:35:"js/components/notificationWidget.js";}}s:3:"css";a:0:{}s:9:"jsOptions";a:0:{}s:10:"cssOptions";a:0:{}s:14:"publishOptions";a:0:{}}s:31:"/js/components/supportWindow.js";a:9:{s:10:"sourcePath";N;s:8:"basePath";s:32:"C:\xampp\htdocs\clima-commit\web";s:7:"baseUrl";s:0:"";s:7:"depends";a:1:{i:0;s:19:"yii\web\JqueryAsset";}s:2:"js";a:1:{i:0;a:1:{i:0;s:30:"js/components/supportWindow.js";}}s:3:"css";a:0:{}s:9:"jsOptions";a:0:{}s:10:"cssOptions";a:0:{}s:14:"publishOptions";a:0:{}}s:34:"yii\bootstrap\BootstrapPluginAsset";a:9:{s:10:"sourcePath";s:62:"C:\xampp\htdocs\clima-commit\vendor/bower-asset/bootstrap/dist";s:8:"basePath";s:48:"C:\xampp\htdocs\clima-commit\web\assets\ece30cab";s:7:"baseUrl";s:16:"/assets/ece30cab";s:7:"depends";a:2:{i:0;s:19:"yii\web\JqueryAsset";i:1;s:28:"yii\bootstrap\BootstrapAsset";}s:2:"js";a:1:{i:0;s:15:"js/bootstrap.js";}s:3:"css";a:0:{}s:9:"jsOptions";a:0:{}s:10:"cssOptions";a:0:{}s:14:"publishOptions";a:0:{}}}";s:7:"summary";a:13:{s:3:"tag";s:13:"6715f6de4bb8f";s:3:"url";s:67:"http://localhost:7777/index.php?r=project%2Fnew-jupyter-request-new";s:4:"ajax";i:0;s:6:"method";s:3:"GET";s:2:"ip";s:3:"::1";s:4:"time";d:1729492702.267155;s:10:"statusCode";i:200;s:8:"sqlCount";i:41;s:21:"excessiveCallersCount";i:0;s:9:"mailCount";i:0;s:9:"mailFiles";a:0:{}s:10:"peakMemory";i:11073712;s:14:"processingTime";d:0.10544300079345703;}s:10:"exceptions";a:0:{}}